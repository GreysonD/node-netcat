0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.3.24
3 info using node@v0.10.25
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/joaquimserafim/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
12 verbose folder .
13 info prepublish node-netcat@1.2.5
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/joaquimserafim/.npm/1f1177db-tar.lock
16 silly lockFile a19a8726-26173-0-2533745935652405-tmp-tgz tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
17 verbose lock tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz /Users/joaquimserafim/.npm/a19a8726-26173-0-2533745935652405-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile a19a8726-26173-0-2533745935652405-tmp-tgz tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
21 silly lockFile a19a8726-26173-0-2533745935652405-tmp-tgz tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
22 verbose tar unpack /var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
23 silly lockFile fc7b0066-26173-0-2533745935652405-package tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
24 verbose lock tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package /Users/joaquimserafim/.npm/fc7b0066-26173-0-2533745935652405-package.lock
25 silly lockFile a19a8726-26173-0-2533745935652405-tmp-tgz tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
26 verbose lock tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz /Users/joaquimserafim/.npm/a19a8726-26173-0-2533745935652405-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry LICENSE
32 silly gunzTarPerm extractEntry index.js
33 silly gunzTarPerm extractEntry .travis.yml
34 silly gunzTarPerm extractEntry lib/client.js
35 silly gunzTarPerm extractEntry lib/index.js
36 silly gunzTarPerm extractEntry lib/portscan.js
37 silly gunzTarPerm extractEntry lib/server.js
38 silly gunzTarPerm extractEntry lib/udp_client.js
39 silly gunzTarPerm extractEntry lib/udp_server.js
40 silly gunzTarPerm extractEntry lib/ports.json
41 silly gunzTarPerm extractEntry ChangeLog.md
42 silly gunzTarPerm extractEntry test/index.js
43 silly lockFile fc7b0066-26173-0-2533745935652405-package tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
44 silly lockFile fc7b0066-26173-0-2533745935652405-package tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
45 silly lockFile a19a8726-26173-0-2533745935652405-tmp-tgz tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
46 silly lockFile a19a8726-26173-0-2533745935652405-tmp-tgz tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/tmp.tgz
47 verbose tar pack [ '/Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz',
47 verbose tar pack   '/var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package' ]
48 verbose tarball /Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
49 verbose folder /var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
50 silly lockFile fc7b0066-26173-0-2533745935652405-package tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
51 verbose lock tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package /Users/joaquimserafim/.npm/fc7b0066-26173-0-2533745935652405-package.lock
52 silly lockFile 0ffa10f8-pm-node-netcat-1-2-5-package-tgz tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
53 verbose lock tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz /Users/joaquimserafim/.npm/0ffa10f8-pm-node-netcat-1-2-5-package-tgz.lock
54 silly lockFile fc7b0066-26173-0-2533745935652405-package tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
55 silly lockFile fc7b0066-26173-0-2533745935652405-package tar:///var/folders/zm/l_b39t013qxg7mv6ml2fnmnw0000gn/T/npm-2399-ziwSy_DC/1391032326173-0.2533745935652405/package
56 silly lockFile 0ffa10f8-pm-node-netcat-1-2-5-package-tgz tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
57 silly lockFile 0ffa10f8-pm-node-netcat-1-2-5-package-tgz tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
58 silly lockFile d10eb3a3-im-npm-node-netcat-1-2-5-package /Users/joaquimserafim/.npm/node-netcat/1.2.5/package
59 verbose lock /Users/joaquimserafim/.npm/node-netcat/1.2.5/package /Users/joaquimserafim/.npm/d10eb3a3-im-npm-node-netcat-1-2-5-package.lock
60 silly lockFile d10eb3a3-im-npm-node-netcat-1-2-5-package /Users/joaquimserafim/.npm/node-netcat/1.2.5/package
61 silly lockFile d10eb3a3-im-npm-node-netcat-1-2-5-package /Users/joaquimserafim/.npm/node-netcat/1.2.5/package
62 verbose tar unpack /Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
63 silly lockFile f3c9a685-im-npm-node-netcat-1-2-5-package tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package
64 verbose lock tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package /Users/joaquimserafim/.npm/f3c9a685-im-npm-node-netcat-1-2-5-package.lock
65 silly lockFile 0ffa10f8-pm-node-netcat-1-2-5-package-tgz tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
66 verbose lock tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz /Users/joaquimserafim/.npm/0ffa10f8-pm-node-netcat-1-2-5-package-tgz.lock
67 silly gunzTarPerm modes [ '755', '644' ]
68 silly gunzTarPerm extractEntry package.json
69 silly gunzTarPerm extractEntry .npmignore
70 silly gunzTarPerm extractEntry README.md
71 silly gunzTarPerm extractEntry LICENSE
72 silly gunzTarPerm extractEntry index.js
73 silly gunzTarPerm extractEntry .travis.yml
74 silly gunzTarPerm extractEntry ChangeLog.md
75 silly gunzTarPerm extractEntry lib/client.js
76 silly gunzTarPerm extractEntry lib/index.js
77 silly gunzTarPerm extractEntry lib/portscan.js
78 silly gunzTarPerm extractEntry lib/server.js
79 silly gunzTarPerm extractEntry lib/udp_client.js
80 silly gunzTarPerm extractEntry lib/udp_server.js
81 silly gunzTarPerm extractEntry lib/ports.json
82 silly gunzTarPerm extractEntry test/index.js
83 silly lockFile f3c9a685-im-npm-node-netcat-1-2-5-package tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package
84 silly lockFile f3c9a685-im-npm-node-netcat-1-2-5-package tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package
85 silly lockFile 0ffa10f8-pm-node-netcat-1-2-5-package-tgz tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
86 silly lockFile 0ffa10f8-pm-node-netcat-1-2-5-package-tgz tar:///Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz
87 verbose chmod /Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz 644
88 verbose chown /Users/joaquimserafim/.npm/node-netcat/1.2.5/package.tgz [ 501, 20 ]
89 silly lockFile 3a52ce78- .
90 silly lockFile 3a52ce78- .
91 silly publish { name: 'node-netcat',
91 silly publish   version: '1.2.5',
91 silly publish   description: 'nc/netcat - arbitrary TCP and UDP connections and listens in node.js',
91 silly publish   main: 'index.js',
91 silly publish   scripts: { test: 'tape test/index.js' },
91 silly publish   repository:
91 silly publish    { type: 'git',
91 silly publish      url: 'https://github.com/joaquimserafim/node-netcat' },
91 silly publish   keywords: [ 'netcat', 'nc', 'tcp', 'udp', 'portscan' ],
91 silly publish   author: { name: '@joaquimserafim' },
91 silly publish   license: 'MIT',
91 silly publish   devDependencies: { tape: '~2.3.2' },
91 silly publish   dependencies: { underscore: '~1.5.2', lasync: '~1.0.0' },
91 silly publish   readme: '#node-netcat\n\n\n<a href="https://nodei.co/npm/node-netcat/"><img src="https://nodei.co/npm/node-netcat.png"></a>\n\n[![Build Status](https://travis-ci.org/joaquimserafim/node-netcat.png?branch=master)](https://travis-ci.org/joaquimserafim/node-netcat)\n\n<img src="https://david-dm.org/joaquimserafim/lasync.png">\n\n###Description\n\n  Arbitrary TCP and UDP connections and listens to be used in Node.js\n\t\n\tTrying to implement all that "nc" allows to be used in Node.js, this is a good \n\tmodule to implement simple server/client testing stuff or even to create simple\n\ttcp servers and clients.\n\t\t\n\tv1.2.5\n\t\t. open TCP/UDP connections and sending messages (client)\n\t\t. listen on arbitary TCP/UDP ports and response to the received messages (server)\n\t\t. PortScan (portscan)\n\t\t. TCP only deal with IPV4\n\t\n\t\n\tnc listener (-k -l cmdline)      -> Necat.server\n\tnc host port                     -> Netcat.client\n\tnc -z host port_start[-port_end] -> Netcat.portscan\n\n\n####Installation\n\n\tnpm install (--save) node-netcat\n\n\n##Netcat -> API\n\n####Client\n\n\tnew Netcat.client(port, host, [options])\n\t\n\toptions = {\n\t // define a connection timeout\n\t\ttimeout: 60000,\n\t // buffer(default, to receive the original Buffer objects), ascii, hex,utf8, base64\n\t  read_encoding: \'buffer\',\n\t // ascii(default), base64, utf8, hex\n\t write_encoding: \'ascii\'\n\t }\n\n\t// client init connection\n\t client.start()\n\t\n\t\n\tsend data:\n\t\n\tclient.send(\'message\', [close_connection], [callback]);\n\t\n\tclose_connection: false is the default value\n\n\n\tevents:\n\t\n\t\ton(\'open\', function ())\n\t\ton(\'data\', function (data))\n\t\ton(\'error\', function (err))\n\t\ton(\'close\', function ())\n\t\t\t\n\t\t\t\n####Server (-k -l)\n\n\tnew Netcat.server(port, [host], [options])\n\t\n\toptions = {\n\t // define a connection timeout\n\t\ttimeout: 60000,\n\t // buffer(default, to receive the original Buffer objects), ascii, hex,utf8, base64\n\t  read_encoding: \'buffer\',\n\t // ascii(default), base64, utf8, hex\n\t write_encoding: \'ascii\'\n\t }\n\t\t\t\n\tserver.listen()// init server\n\t\n\tserver.close()// close server but must not exists active clients\n\t\n\t\n\tsend data to a client:\n\t\t\n\tserver.send(client, message, [close_connection], [callback]);\n\t\n\tclose_connection: false is the default value, this is a way to close the connection with a client.\n\tcallback: parameter will be executed when the data is finally written out - this may not be immediately.\n\t\n\t\n\tget clients:\n\t\n\tserver.getClients();// return an array\n\t\n\t\n\tevents: \n\t\n\t\ton(\'ready\', function ())// server it\'s ready\n\t\ton(\'data\', function (client, data))\n\t\ton(\'client_on\', function (client))// client connect\n\t\ton(\'client_off\', function (client))// client disconnect\n\t\ton(\'error\', function (err))\n\t\ton(\'close\', function ())// closes the server\n\t\t\n\n####UDP Client (-u)\n\n    Netcat.udpClient(port, host, [options])\n    \n    options = {\n\t // define a connection timeout\n\t\ttimeout: 60000,\n\t // buffer(default, to receive the original Buffer objects), ascii, hex,utf8, base64\n\t  read_encoding: \'buffer\'\'\n\t }\n    \n    events:\n\t\ton(\'open\', function ())\n\t\ton(\'message\', function (message, {port, address}, protocol_family))\n\t\ton(\'error\', function (err))\n\t\ton(\'close\', function ())\n        \n        // protocol_family - ipv4 | ipv6\n\n    \n    methods:\n        close()\n        start() // init client\n        send(\'message\')\n     \n    "message" not pass a Buffer!!!\n \n#####  *A Note about UDP datagram size\n\n> The maximum size of an IPv4/v6 datagram depends on the MTU (Maximum Transmission Unit) and on the Payload Length field size.\n> \n> The Payload Length field is 16 bits wide, which means that a normal payload cannot be larger than 64K octets including internet header and data (65,507 bytes = 65,535 − 8 bytes UDP header − 20 bytes IP header); this is generally true for loopback interfaces, but such long datagrams are impractical for most hosts and networks.\n> \n> The MTU is the largest size a given link layer technology can support for datagrams. For any link, IPv4 mandates a minimum MTU of 68 octets, while the recommended MTU for IPv4 is 576 (typically recommended as the MTU for dial-up type applications), whether they arrive whole or in fragments.\n> \n> For IPv6, the minimum MTU is 1280 octets, however, the mandatory minimum fragment reassembly buffer size is 1500 octets. The value of 68 octets is very small, since most current link layer technologies have a minimum MTU of 1500 (like Ethernet).\n> \n> Note that it\'s impossible to know in advance the MTU of each link through which a packet might travel, and that generally sending a datagram greater than the (receiver) MTU won\'t work (the packet gets silently dropped, without informing the source that the data did not reach its intended recipient). \n\n\n####UDP Server (-u -k -l)\n\n    Netcat.udpServer(port, host, [options])\n    \n    options = {\n\t // define a connection timeout\n\t\ttimeout: 60000,\n\t // buffer(default, to receive the original Buffer objects), ascii, hex,utf8, base64\n\t  read_encoding: \'buffer\'\'\n\t }\n\n    methods:\n        close()\n        bind() // binding to a port\n\n\n    events:\n\t\ton(\'ready\', function ())\n\t\ton(\'data\', function (client, data, protocol family))\n\t\ton(\'error\', function (err))\n\t\ton(\'close\', function ())\n\t\t\n\t\t\t\t\t\n####PortScan (-z [port_start-port_end])\n\t\n\tscan.run(host, ports*, cb)\n\t\n\t* a single port 80 or between various ports 22-80\n\t\n\n\n##Examples\n\n####Client\n\n\tvar Netcat = require(\'node-netcat\');\n\t\n\tvar client = Netcat.client(5000, \'localhost\');\n\t\n\tclient.on(\'open\', function () {\n\t  console.log(\'connect\');\n\t  client.send(\'this is a test\' + \'\\n\');\n\t});\n\t\n\tclient.on(\'data\', function (data) {\n\t  console.log(data.toString(\'ascii\'));\n\t  client.send(\'Goodbye!!!\', true);\n\t});\n\t\n\tclient.on(\'error\', function (err) {\n\t  console.log(err);\n\t});\n\t\n\tclient.on(\'close\', function () {\n\t  console.log(\'close\');\n\t});\n\n\tclient.start();\n\n####Server\n\n\tvar Netcat = require(\'node-netcat\');\n\t\n\tvar server = Netcat.server(5000);\n\t\n\t\n\tserver.on(\'ready\', function () { console.log(\'server ready\'); });\n\tserver.on(\'data\', function (client, data) { console.log(\'server rx: \' + data + \' from \' + client); });\n\tserver.on(\'client_on\', function (client) { console.log(\'client on \', client); });\n\tserver.on(\'client_of\', function (client) { console.log(\'client off \', client); });\n\tserver.on(\'error\', function (err) { console.log(err); });\n\tserver.on(\'close\', function () { console.log(\'server closed\'); });\n\n\tserver.listen();// start to listening\n\t\t\n\t// get active clients\n\tvar clients = server.getClients();\n\t\n\t// send messages to clients\t and close the connection\n\tfor (var client in clients) {\n      server.send(clients[client], \'received \' + data, true);\n    }\n\n\t// or a normal message\t\n\tserver.send(client, \'message\');\n\t\n\n####UDP Client\n\n    var client = Netcat.udpClient(5000, \'127.0.0.1\');\n    \n    client.on(\'open\', function () {  console.log(\'open\'); });\n    \n    client.once(\'error\', function (err) {  console.error(\'err\'); });\n    \n    client.once(\'close\', function () { console.log(\'client, closed\'); });\n    \n    clien.send(\'Hello World\');\n\n\t\n####UDP Server\n\n    var server = Netcat.udpServer(5000, \'127.0.0.1\');\n    \n    server.on(\'data\', function (msg, client, protocol) {\n      console.log(\'rx: \' + msg + \', from \' + client);\n    });\n\n    server.on(\'ready\', function () { console.log(\'ready\'); });\n      \n    server.once(\'error\', function (err) { console.log(err); });\n    \n    server.once(\'close\', function () { console.log(\'close\'); });\n    \n    server.bind();\n    \n    \n    setTimeout(function () {\n      server.close();\n    }, 30000);\n\n\n\n####PortScan\n\n\tvar Netcat = require(\'node-netcat\');\n\n\tvar scan = Netcat.portscan();\n\t\n\tscan.run(\'google.com\', \'80-81\', function (err, res) {\n\t\tconsole.log(err, res);\t\n\t});',
91 silly publish   readmeFilename: 'README.md',
91 silly publish   bugs: { url: 'https://github.com/joaquimserafim/node-netcat/issues' },
91 silly publish   homepage: 'https://github.com/joaquimserafim/node-netcat',
91 silly publish   _id: 'node-netcat@1.2.5',
91 silly publish   dist: { shasum: '8f34502110f603c543942fabcc467fe638875d99' },
91 silly publish   _from: '.' }
92 verbose url raw node-netcat
93 verbose url resolving [ 'https://registry.npmjs.org/', './node-netcat' ]
94 verbose url resolved https://registry.npmjs.org/node-netcat
95 info trying registry request attempt 1 at 21:52:07
96 http PUT https://registry.npmjs.org/node-netcat
97 http 409 https://registry.npmjs.org/node-netcat
98 verbose url raw node-netcat
99 verbose url resolving [ 'https://registry.npmjs.org/', './node-netcat' ]
100 verbose url resolved https://registry.npmjs.org/node-netcat
101 info trying registry request attempt 1 at 21:52:14
102 http GET https://registry.npmjs.org/node-netcat
103 http 200 https://registry.npmjs.org/node-netcat
104 error publish fail Cannot publish over existing version.
104 error publish fail Update the 'version' field in package.json and try again.
104 error publish fail
104 error publish fail If the previous version was published in error, see:
104 error publish fail     npm help unpublish
104 error publish fail
104 error publish fail To automatically increment version numbers, see:
104 error publish fail     npm help version
105 error System Darwin 13.0.0
106 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
107 error cwd /Users/joaquimserafim/Projects/opensource/node-nc
108 error node -v v0.10.25
109 error npm -v 1.3.24
110 error code EPUBLISHCONFLICT
111 verbose exit [ 1, true ]
